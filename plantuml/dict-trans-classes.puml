interface TranslateInterface {

   public function translate(string $str, string $dest_lang, string $src_lang="") : string;
   public function getTranslationLanguages() : array;
}

interface DictionaryInterface {
   
   public function lookup(string $str, string $src_lang, string $dest_lang) : array|ResultsIterator; 
   public function getDictionaryLanguages() : array; 
}


class RestClient {

   static createRestClient(ClassID $id) : mixed

   __construct(ClassID id)
}

class AzureTranslator extends RestClient implements DictionaryInterface, TranslateInterface {

   __construct(ClassID id)
   
   getTranslationLanguages() : array

   getDictionaryLanguages() : array 
    
   translate(string text, string dest_lang, source_lang="") : string 
   
   lookup(string word, string src_lang, string dest_lang) : ResultsIterator

   examples(string word, array translations) : ResultsIterator
}

class DeeplTranslator extends RestClient implements TranslateInterface {
   
   __construct(ClassID id)
   
   getLanguages() : string

   getSourceLanguages() : array

   getTargetLanguages() : array
   
   getTranslationLanguages() : array

   translate(string text, string dest_lang, source_lang="") : string 
}

class SystranTranslator extends RestClient implements DictionaryInterface, TranslateInterface {

   __construct(ClassID id)
   
   getTranslationLanguages() : array

   getDictionaryLanguages() : array 
    
   translate(string text, string dest_lang, source_lang="") : string 
   
   lookup(string $word, string $src_lang, string $dest_lang) : ResultsIterator
}
